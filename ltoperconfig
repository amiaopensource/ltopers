#!/usr/bin/env bash

# ltoperconfig
# set up variables

CONFIG_VERSION="0.9"
SCRIPTDIR=$(dirname "${0}")
CONFIG="Y"
LTO_CONFIG_FILE="${SCRIPTDIR}/ltoper.conf"

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

if [ -f "${LTO_CONFIG_FILE}" ] ; then
    . "${LTO_CONFIG_FILE}"
else
    touch "${LTO_CONFIG_FILE}"
fi

conf="
# Set transparency: 0 is transparent, 1 is opaque
*.transparency=1.00

# Set window title
*.title = LTOPERS

# intro text
intro.x = 20
intro.y = 500
intro.width = 500
intro.type = text
intro.text = LTO configuration options. Leave the option blank to be prompted.

# username to the filemaker database
FILEMAKER_USER.x = 20
FILEMAKER_USER.y = 440
FILEMAKER_USER.type = textfield
FILEMAKER_USER.label = Please enter your filemaker username:
FILEMAKER_USER.width = 270
FILEMAKER_USER.default = "${FILEMAKER_USER}"

# password to filemaker
FILEMAKER_PASS.x = 20
FILEMAKER_PASS.y = 390
FILEMAKER_PASS.type = textfield
FILEMAKER_PASS.label = Please enter your filemaker password:
FILEMAKER_PASS.width = 270
FILEMAKER_PASS.default = "${FILEMAKER_PASS}"

# Name of the filemaker database
FILEMAKER_DB.x = 20
FILEMAKER_DB.y = 340
FILEMAKER_DB.type = textfield
FILEMAKER_DB.label = Please enter the name of the filemaker database:
FILEMAKER_DB.width = 270
FILEMAKER_DB.default = "${FILEMAKER_DB}"

# filemaker xml url
FILEMAKER_XML_URL.x = 20
FILEMAKER_XML_URL.y = 280
FILEMAKER_XML_URL.type = textfield
FILEMAKER_XML_URL.label = Please enter the filemaker XML URL:
FILEMAKER_XML_URL.width = 270
FILEMAKER_XML_URL.default = "${FILEMAKER_XML_URL}"

# Add a cancel button with default label
cb.type=cancelbutton

";

#comments must be commented (start with #)
config_comment="# Set each value to empty quotes (like \"\") to prompt during run, or set to a provided option."
FILEMAKER_USER_COMMENT="# Set the filemaker username:  $(printf "\"%s\" " "${FILEMAKER_USER[@]}")"
FILEMAKER_PASS_COMMENT="#Set the filemaker password:  $(printf "\"%s\" " "${FILEMAKER_PASS[@]}")"
FILEMAKER_DB_COMMENT="#Set the name of the filemaker database:  $(printf "\"%s\" " "${FILEMAKER_DB[@]}")"
FILEMAKER_XML_URL_COMMENT="#Set the filemaker xml url: $(printf "\"%s\" " "${FILEMAKER_XML_URL[@]}")"

pashua_configfile=$(/usr/bin/mktemp /tmp/pashua_XXXXXXXXX)
echo "${conf}" > "${pashua_configfile}"
_pashua_run
rm "${pashua_configfile}"

if [[ "$cb" = 0 ]] ; then
    #report back options
cat <<EOF
  FILEMAKER_USER = ${FILEMAKER_USER}
  FILEMAKER_PASS = ${FILEMAKER_PASS}
  FILEMAKER_DB = ${FILEMAKER_DB}
  FILEMAKER_XML_URL = ${FILEMAKER_XML_URL}

EOF

# write config file
    cat > "${LTO_CONFIG_FILE}" <<EOF
#$(basename "${0}") config file
${config_comment}
${FILEMAKER_USER_COMMENT}
FILEMAKER_USER="${FILEMAKER_USER}"

${FILEMAKER_PASS_COMMENT}
FILEMAKER_PASS="${FILEMAKER_PASS}"

${FILEMAKER_DB_COMMENT}
FILEMAKER_DB="${FILEMAKER_DB}"

${FILEMAKER_XML_URL_COMMENT}
FILEMAKER_XML_URL="${FILEMAKER_XML_URL}"

EOF
 
    . "${LTO_CONFIG_FILE}"
fi
