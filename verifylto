#!/usr/bin/env bash

# verifylto
# This script creates a text document with a list of checksums that are
# generated after a readback. This is to ensure that all files transferred over
# correctly.

SCRIPTDIR=$(dirname "${0}")
HIDDEN_FILES=""
TAPE_MOUNT_POINT="/Volumes"
TAPE_SERIAL_REGEX="^[A-Z0-9]{6}(L[567])?$"
LTO_LOGS="${HOME}/Documents/lto_indexes"
TAPE_EJECT="Y"

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

if [[ $(dirname $(which "${0}")) = "/usr/local/bin" ]] ; then
    VERSION=$(TMP=$(brew info ltopers | grep -Eo "/ltopers/.* \(") ; echo ${TMP:9:(${#TMP}-11)})
else
    VERSION=""
fi

_usage(){
    cat <<EOF
$(basename "${0}") ${VERSION}
This script creates a text document with a list of checksums that are
generated after a readback. This is to ensure that all files transferred over
correctly.

Usage: $(basename "${0}") -t [-e] | -h
  -t  tape serial
  -e  state yes (Y) or no (N) to ejecting the tape after write, default
      is yes
  -h  display this help
EOF
}

OPTIND=1
while getopts ":ht:e:" opt ; do
    case "${opt}" in
        h) _usage ; exit 0 ;;
        t) TAPE_SERIAL="${OPTARG}" ;;
        e) TAPE_EJECT="${OPTARG}" ;;
        :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
        *) echo "Bad option -${OPTARG}" ; _usage ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

SOURCE_DIR="${1}"
_report_to_db
if [[ ! $(echo "${TAPE_SERIAL}" | grep -E "${TAPE_SERIAL_REGEX}") ]] ; then
    echo "${TAPE_SERIAL} is not valid. The tape id must be exactly 6 capital letters and/or numbers, possibly followed by 'L5', 'L6' or 'L7' specifying the LTO generation."
    exit 1
fi

TAPE_PATH="${TAPE_MOUNT_POINT}/${TAPE_SERIAL}"
_checkdir "${TAPE_PATH}"

VERIFYTIME=$(_get_iso8601_c)
READBACKDIR="${LTO_LOGS}/readback_checksums"
_mkdir2 "${READBACKDIR}"
find "${TAPE_PATH}" -type f ! -name .DS_Store -exec md5deep -rel "{}" >> "${READBACKDIR}/${TAPE_SERIAL}_ReadBack_checksum_${VERIFYTIME}.md5" \;

case "${TAPE_EJECT}" in
    y|Y) umount "${TAPE_PATH}" ;;
    *)   echo "Done verifying but not ejecting ${TAPE_SERIAL}." ;;
esac

_eventoutcome_update
_report_schema_db
_report_fixity_db
_db_email_delivery "${SQL_ERROR_EMAIL_TO}"
