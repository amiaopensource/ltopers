#!/usr/bin/env bash

# searchlto

SCRIPTDIR=$(dirname $(which "${0}"))

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

if [[ $(dirname $(which "${0}")) = "/usr/local/bin" || $(dirname $(which "${0}")) = "${HOME}/.linuxbrew/bin" ]] ; then
    VERSION=$(TMP=$(brew info ltopers | grep -Eo "/ltopers/.* \(") ; echo ${TMP:9:(${#TMP}-11)})
else
    VERSION=""
fi

_usage(){
    cat <<EOF
$(basename "${0}") ${VERSION}

Usage: $(basename "${0}") [Tape ID or Media ID]
  -h  display this help
  -c  compare input to database
  -f  show full results (as opposed to only .mov files)
EOF
}

_compare_file(){
    if [ -f "${INPUT}" ] ; then
        DATE=$(date -u -r "$INPUT" +%Y-%m-%dT%H:%M:%S.000000000Z)
        SIZE=$(wc -c "${INPUT}")
        SQL_RESULTS=$(mysql --login-path="${PREMIS_PROFILE}" "${PREMIS_NAME}" -B -e "SELECT modifyTime,fileSize,fileName FROM ltoSchema WHERE fileName LIKE '%${SEARCH_TERM}%'")
        LTO_SIZE=$(echo ${SQL_RESULTS} | cut -d ' ' -f5)
        LTO_DATE=$(echo ${SQL_RESULTS} | cut -d ' ' -f4)
        
        if [ -n "${SQL_RESULTS}" ] ; then
            if [ "${DATE}" != "${LTO_DATE}" ] ; then
                echo -e "\033[1;31mWARNING: Date mismatch between file data and file records in LTO database\033[0m"
            fi
            if [ $(echo "${SIZE}" | sed -e 's/^[[:space:]]*//' | cut -d' ' -f1) != "${LTO_SIZE}" ] ; then
                echo -e "\033[1;31mWARNING: Size mismatch between file data and file records in LTO database\033[0m"
            fi
            if [ "${DATE}" = "${LTO_DATE}" ] && [ $(echo "${SIZE}" | sed -e 's/^[[:space:]]*//' | cut -d' ' -f1) = "${LTO_SIZE}" ] ; then
                echo -e "\033[1;92mMatching File(s) Found\033[0m"
            fi
            echo "Information from Schema"
            echo "------"
            echo "${SQL_RESULTS}"
            echo ""
            echo "Information From File"
            echo "------"
            echo "${DATE} ${SIZE}"            
        else
            echo -e "\033[1;31mFile with that name not found.  Checking for files of similar size and modification date\033[0m"
            SQL_RESULTS=$(mysql --login-path="${PREMIS_PROFILE}" "${PREMIS_NAME}" -B -e "SELECT modifyTime,fileSize,fileName FROM ltoSchema WHERE fileSize='$(echo "${SIZE}" | sed -e 's/^[[:space:]]*//' | cut -d' ' -f1)' OR modifyTime='${DATE}'")
            if [ -n "${SQL_RESULTS}" ] ; then
                echo -e "\033[1;92mFollowing possible matches were found:\033[0m"
                echo "${SQL_RESULTS}"
                echo "Information from file"
                echo "${DATE} ${SIZE}"
            else
                echo -e "\033[1;31mNo potential matches found\033[0m"
            fi
        fi
            
    else
        echo "Input is not a valid file. Exiting"
        exit 1
    fi
}

OPTIND=1
while getopts ":hcf" OPT; do
    case "${OPT}" in
        h) _usage ; exit 0 ;;
        c) RUNMODE="compare" ;;
        f) RUNMODE="full" ;;
        *) echo "bad option -${OPTARG}" ; _usage ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

SEARCH_INPUT="${*}"

if [ "${*}" = "" ] ; then
    echo "Enter the mediaid(s) or lto tape number(s) to search"
    read SEARCH_INPUT
fi
for INPUT in $(echo "${SEARCH_INPUT}") ; do
    SEARCH_TERM="${INPUT}"
    if [ "${RUNMODE}" = "compare" ] ; then
        SEARCH_TERM=$(basename "${INPUT}")
        _compare_file
    else
        SQL_RESULTS=$(mysql --login-path="${PREMIS_PROFILE}" "${PREMIS_NAME}" -B -e "SELECT ltoID,filePath FROM ltoSchema WHERE ltoID='${SEARCH_TERM}'")
        if [ -z "${SQL_RESULTS}" ] ; then
            SQL_RESULTS=$(mysql --login-path="${PREMIS_PROFILE}" "${PREMIS_NAME}" -B -e "SELECT ltoID,filePath FROM ltoSchema WHERE MATCH(filePath) AGAINST ('${SEARCH_TERM}')")
        fi
        if [ "${RUNMODE}" = "full" ] ; then
            echo "${SQL_RESULTS}"
        else
            echo "${SQL_RESULTS}" | grep ".mov" | grep -v "fileMeta" | grep -v "access"
        fi
    fi
done
