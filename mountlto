#!/usr/bin/env bash

# mountlto

SCRIPTDIR=$(dirname "${0}")
DEPENDENCIES=(ltfs mmfunctions)
MINIMUM_TAPE_SERIAL_LENGTH=2

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

unset LTO_COUNT
unset LTFS_OPTIONS
_check_for_lto_index_dir
LTO_LOGS="${LTO_INDEX_DIR}"
if [[ "$(uname -s)" = "Darwin" ]] ; then
    # try to figure out how many lto decks are attached
    LTO_COUNT=$(system_profiler SPSASDataType | grep "SCSI Target Identifier" | wc -l | awk '{print $1}')
else
    # TO DO: itemize when there are multiple LTO drives in Linux and Windows
    LTO_COUNT=1
fi

if [[ "${LTO_COUNT}" -eq 0 ]] ; then
    _report -w "No LTO decks were found."
    exit 1
fi

[ ! -d "${LTO_LOGS}" ] && mkdir -p "${LTO_LOGS}"

_report -d "Checking for ready tapes..."

for i in $(seq 1 "${LTO_COUNT}") ; do
    DECK=$(echo "$i - 1" | bc)
    if [ $(which ltfs_ldun) ] ; then
        ltfs_ldun load ${DECK} 1>/dev/null
    fi
    LOADTMP=$(_maketemp)
    unset TAPE_SERIAL
    COUNTER=0
    echo -n "Checking for tape barcode"
    while [[ "${#TAPE_SERIAL}" -lt "${MINIMUM_TAPE_SERIAL_LENGTH}" ]] && [[ "${COUNTER}" -lt 5 ]]; do
        let COUNTER=COUNTER+1
        ltfs -f -o devname="${DECK}" 2> "${LOADTMP}"
        # find barcode by either "Volser(Barcode)" (Quantum style) or "Tape attribute: Barcode" (IBM style)
        TAPE_SERIAL=$(cat "${LOADTMP}" | grep -a "Volser(Barcode)\|Tape attribute: Barcode" | awk 'NF>1{print $NF}')
        echo -n "."
    done
    echo
    if [[ "${#TAPE_SERIAL}" -lt "${MINIMUM_TAPE_SERIAL_LENGTH}" ]] ; then
        if [[ $(cat "${LOADTMP}" | grep -a "Mounting the volume") && ! $(cat "${LOADTMP}" | grep -a "failed to load the tape") ]] ; then
            DECKSERIAL=$(cat "${LOADTMP}" | grep -a -o "serial number is [A-Z0-9]*" | awk '{print $4}')
            TAPE_SERIAL="${DECKSERIAL}"
        else
            unset TAPE_SERIAL
        fi
    fi
    if [[ "${#TAPE_SERIAL}" -ge "${MINIMUM_TAPE_SERIAL_LENGTH}" ]] ; then
        echo "Deck ${DECK} found with tape ${TAPE_SERIAL}"
        if [[ $(uname -s) = "Darwin" ]] ; then
            MOUNT_DIR="/Volumes/${TAPE_SERIAL}"
        else
            MOUNT_DIR="/mnt/${TAPE_SERIAL}"
        fi
        _report -d "MOUNTING TAPE : THE TAPE WILL MOUNT TO THE ${MOUNT_DIR} FOLDER"
        _report -d "MOUNTING TAPE : AFTER MOUNT PRESS CONTROL-C$ TO EJECT"
        trap _cleanup_mount_dir SIGHUP SIGINT SIGTERM

        mkdir -p "${MOUNT_DIR}"

        LTFS_OPTIONS+=(-o eject)
        LTFS_OPTIONS+=(-o noatime)
        LTFS_OPTIONS+=(-o capture_index)
        LTFS_OPTIONS+=(-o devname=${DECK})
        LTFS_OPTIONS+=(-o volname="${TAPE_SERIAL}")
        LTFS_OPTIONS+=(-o uid=$(id -u))

        ltfs -f -o work_directory="${LTO_LOGS}" ${LTFS_OPTIONS[@]} "${MOUNT_DIR}"
        [ -d "${MOUNT_DIR}" ] && rmdir "${MOUNT_DIR}"
        renameschemas -u
        break
    fi
    if [[ "$i" -eq "${LTO_COUNT}" ]] ; then
        _report -d "Checked ${LTO_COUNT} decks and none appear to have tapes ready to mount."
    fi
done
