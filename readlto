#!/usr/bin/env bash

# readlto
# This script transfers files from an LTO tape to another location.

SCRIPTDIR=$(dirname "${0}")
DEPENDENCIES=(gcp)
TAPE_MOUNT_POINT="/Volumes"
TAPE_SERIAL_REGEX="^[A-Z0-9]{6}(L[5-8])?$"
TAPE_EJECT="Y"

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

unset VERSION
if [[ $(dirname $(which "${0}")) = "/usr/local/bin" || $(dirname $(which "${0}")) = "${HOME}/.linuxbrew/bin" ]] ; then
    VERSION=$(TMP=$(brew info ltopers | grep ".*\*$" | grep -Eo "/ltopers/.* \(") ; echo ${TMP:9:(${#TMP}-11)})
fi

_usage(){
    cat <<EOF
$(basename "${0}") ${VERSION}
This script moves files from an LTO tape to another location.

Usage: $(basename "${0}") -t [-e] | -h
  -t  tape serial number
  -e  state yes (Y) or no (N) to ejecting the tape after migration, default
      is yes
  -h  display this help
EOF
}

OPTIND=1
while getopts ":t:e:h" opt ; do
    case "${opt}" in
        t) TAPE_SERIAL="${OPTARG}" ;;
        e) TAPE_EJECT="${OPTARG}" ;;
        h) _usage ; exit 0 ;;
        :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
        *) echo "Bad option -${OPTARG}" ; _usage ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

TARGET="${1}"
if [[ ! $(echo "${TAPE_SERIAL}" | grep -E "${TAPE_SERIAL_REGEX}") ]] ; then
    echo "${TAPE_SERIAL} is not valid. The tape id must be exactly 6 capital letters and/or numbers, possibly followed by 'L5', 'L6', 'L7' or 'L8' specifying the LTO generation."
    exit 1
fi

TAPE_PATH="${TAPE_MOUNT_POINT}/${TAPE_SERIAL}"
_checkdir "${TAPE_PATH}"
_checkdir "${TARGET}"

gcp --preserve=mode,timestamps -nRv "${TAPE_PATH}/"* "${TARGET}/"

case "${TAPE_EJECT}" in
    y|Y) umount "${TAPE_PATH}" ;;
    *)   echo "Done migrating but not ejecting ${TAPE_SERIAL}." ;;
esac
