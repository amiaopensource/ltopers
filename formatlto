#!/usr/bin/env bash

# formatlto
# Formats an LTO tape with LTFS.

VERSION="0.2"
SCRIPTDIR=$(dirname "${0}")
DEPENDENCIES=(mkltfs)
RED="$(tput setaf 1)"   # Red      - For Warnings
GREEN="$(tput setaf 2)" # Green    - For Declarations
BLUE="$(tput setaf 4)"  # Blue     - For Questions
NC="$(tput sgr0)"       # No Color

. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ; }

_usage(){
    echo
    echo "$(basename "${0}") ${VERSION}"
    echo "This script formats an LTO tape with LTFS."
    echo "Dependencies: ${DEPENDENCIES[@]}"
    echo "Usage: $(basename "${0}") [[-f] [-c] | -h]"
    echo "  -f  force formating"
    echo "  -c  use compression"
    echo "  -h  display this help"
    echo
}

unset MIDDLE_OPTIONS
while getopts ":fch" opt ; do
    case "${opt}" in
        f) MIDDLE_OPTIONS+=(-f) ;;
        c) COMPRESS=1 ;;
        h) _usage ; exit 0 ;;
        *) echo "${RED}Error: Bad option -${OPTARG}${NC}" ; _usage ; exit 1 ;;
    esac
done

if [ ! "${COMPRESS}" = "1" ] ; then
    MIDDLE_OPTIONS+=(-c)
else
    echo "${GREEN}Will use compression.${NC}"
fi

if [ ! "${LTO_ARRAY}" ] ; then
    if [[ $(uname -s) = "Darwin" ]] ; then
        LTO_ARRAY=($(system_profiler SPSASDataType | grep "SCSI Target Identifier" | cut -d : -f2 | sort | xargs)) # try to figure out how many lto decks are attached
    else
        LTO_ARRAY=(0) # to do: itemize when there are multiple lto drives in Linux and Windows
    fi
fi

if [[ "${#LTO_ARRAY[@]}" -gt 1 ]] ; then
   PS3="${BLUE}Which LTO deck?${NC} "
   eval set "${LTO_ARRAY[@]}"
   select DECK in "$@"
   do
       break
   done
   if [ ! "${DECK}" ] ; then
       echo "${RED}Error: You selected an invalid deck.${NC}"
       exit 1
   fi
else
   if [[ $(uname -s) = "Linux" ]] ; then
       DECK='/dev/sg3'
   else
       DECK=0
   fi
fi

REGEX="^[A-Z0-9]{6}$"
printf "${BLUE}Enter the 6 character tape identifier:${NC} "
read TAPE_ID
if [[ ! $(echo "${TAPE_ID}" | grep -E "${REGEX}") ]] ; then
   echo "${RED}Error: The tape id must contain exactly 6 capital letters and/or numbers.${NC}"
   exit 1
fi
if [[ $(which ltfs_ldun) ]] ; then
    ltfs_ldun load "${DECK}"
fi
mkltfs ${MIDDLE_OPTIONS[@]} --device=${DECK} --tape-serial="${TAPE_ID}" --volume-name="${TAPE_ID}"
if [[ $(which ltfs_ldun) ]] ; then
    ltfs_ldun unload "${DECK}"
fi
