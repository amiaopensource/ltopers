#!/usr/bin/env bash

# collectionchecksum
# This script will create checksums of metadata files, concatenate checksum.md5
# files, and append to one large checksum file for each directory. This script
# presumes a highly specific directory structure based on CUNY TV's Archival
# Information Package directory structure.

_get_iso8601(){
    date +%FT%T
}

_report(){
    local RED="$(tput setaf 1)"   # Red      - For Warnings
    local GREEN="$(tput setaf 2)" # Green    - For Declarations
    local BLUE="$(tput setaf 4)"  # Blue     - For Questions
    local NC="$(tput sgr0)"       # No Color
    local COLOR=""
    local STARTMESSAGE=""
    local ECHOOPT=""
    OPTIND=1
    while getopts ":qdwstn" OPT; do
        case "${OPT}" in
            q) COLOR="${BLUE}" ;;                         # question mode, use color blue
            d) COLOR="${GREEN}" ;;                        # declaration mode, use color green
            w) COLOR="${RED}" ;;                          # warning mode, use color red
            s) STARTMESSAGE+=([$(basename "${0}")] ) ;;   # prepend scriptname to the message
            t) STARTMESSAGE+=($(_get_iso8601) '- ' ) ;;   # prepend timestamp to the message
            n) ECHOOPT="-n" ;;                            # to avoid line breaks after echo
        esac
    done
    shift $(( OPTIND - 1 ))
    MESSAGE="${1}"
    echo "${ECHOOPT}" "${COLOR}${STARTMESSAGE[*]}${MESSAGE}${NC}"
}

_maketemp(){
    mktemp -t "$(basename "${0}")"
    if [ "${?}" -ne 0 ] ; then
        _report -w "${0}: Can't create temp file. Exiting."
        _report -w "_maketemp was unable to create the temp file, so the script had to exit."
        exit 1
    fi
}

while [ "${*}" != "" ] ; do
    INPUT="${1}"
    TAPECHECKSUMFILE="${INPUT}/tapechecksum.md5"
    TEMP_CHECKSUM_COMPILATION="$(_maketemp)"
    if [ -f "${TAPECHECKSUMFILE}" ] ; then
        _report -wt "A collection checksum already exists at ${TAPECHECKSUMFILE}"
        exit 1
    fi
    _report -d -n "Concatenating existing checksum.md5 files ... "
    find "${INPUT}" -type f -name checksum.md5 | while read CHECKSUM_FILE ; do
        UPF="$(basename "$(dirname "${CHECKSUM_FILE}")")"
        if [[ "${UPF}" == "metadata" ]] ; then
            PATH_CLEANING="$(basename "$(dirname "$(dirname "${CHECKSUM_FILE}")")")/objects/"
        else
            PATH_CLEANING="$(echo "${CHECKSUM_FILE}" | sed "s|${INPUT}/||g;s|checksum.md5||g")"
        fi
        sed "s|  ./|  ./${PATH_CLEANING}|g" "${CHECKSUM_FILE}"
    done > "${TEMP_CHECKSUM_COMPILATION}"
    _report -d "$(wc -l "${TEMP_CHECKSUM_COMPILATION}" | awk '{print $1}') checksum.md5 were gathered for ${INPUT}."

    if [[ -d "${INPUT}" ]] ; then
        cd "${INPUT}"
        TEMP_FILE_LIST="$(_maketemp)"
        TEMP_LIST2MD5="$(_maketemp)"
        find . -type f ! -name ".DS_Store" > "${TEMP_FILE_LIST}"
        LIST_COMPARE="$(diff <(cut -c 35- "${TEMP_CHECKSUM_COMPILATION}" | sort) <(sort "${TEMP_FILE_LIST}"))"
        MISSING_FILES="$(echo "${LIST_COMPARE}" | grep "^<")"
        echo "${LIST_COMPARE}" | grep "^>" | cut -c 3- > "${TEMP_LIST2MD5}"
        if [[ -n "${MISSING_FILES}" ]] ; then
            _report -w "Warning there are files that are in the checksum.md5 files but not present"
            echo "${MISSING_FILES}"
            exit 1
        fi
        TEMP_NEWMD5S="$(_maketemp)"
        if [[ -s "${TEMP_LIST2MD5}" ]] ; then
            _report -d "For the tape checksum, these $(wc -l "${TEMP_LIST2MD5}" | awk '{print $1}') additional files must be checksummed"
            cat "${TEMP_LIST2MD5}"
            md5deep -rel -f "${TEMP_LIST2MD5}" > "${TEMP_NEWMD5S}"
            _report -d "Checksummed $(wc -l "${TEMP_CHECKSUM_COMPILATION}" | awk '{print $1}') additional files."
        fi
        cat "${TEMP_NEWMD5S}" "${TEMP_CHECKSUM_COMPILATION}" | sort -k2 > "${TAPECHECKSUMFILE}"
        _report -d "${TAPECHECKSUMFILE} is ready with $(wc -l "${TAPECHECKSUMFILE}" | awk '{print $1}') checksums."
    else
        _report -d "${INPUT} is not a directory. Exiting."
        exit 1
    fi



    shift
done
