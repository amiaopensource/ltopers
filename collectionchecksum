#!/usr/bin/env bash

# collectionchecksum
# This script will create checksums of metadata files, concatenate checksum.md5
# files, and append to one large checksum file for each directory. This script
# presumes a highly specific directory structure based on CUNY TV's Archival
# Information Package directory structure.

_get_iso8601(){
    date +%FT%T
}

_report(){
    local RED="$(tput setaf 1)"   # Red      - For Warnings
    local GREEN="$(tput setaf 2)" # Green    - For Declarations
    local BLUE="$(tput setaf 4)"  # Blue     - For Questions
    local NC="$(tput sgr0)"       # No Color
    local COLOR=""
    local STARTMESSAGE=""
    local ECHOOPT=""
    OPTIND=1
    while getopts ":qdwstn" OPT; do
        case "${OPT}" in
            q) COLOR="${BLUE}" ;;                         # question mode, use color blue
            d) COLOR="${GREEN}" ;;                        # declaration mode, use color green
            w) COLOR="${RED}" ;;                          # warning mode, use color red
            s) STARTMESSAGE+=([$(basename "${0}")] ) ;;   # prepend scriptname to the message
            t) STARTMESSAGE+=($(_get_iso8601) '- ' ) ;;   # prepend timestamp to the message
            n) ECHOOPT="-n" ;;                            # to avoid line breaks after echo
        esac
    done
    shift $(( OPTIND - 1 ))
    MESSAGE="${1}"
    echo "${ECHOOPT}" "${COLOR}${STARTMESSAGE[*]}${MESSAGE}${NC}"
}

_maketemp(){
    mktemp -q "/tmp/$(basename "${0}").XXXXXX"
    if [ "${?}" -ne 0 ] ; then
        _report -w "${0}: Can't create temp file. Exiting."
        _writeerrorlog "_maketemp" "was unable to create the temp file, so the script had to exit."
        exit 1
    fi
}

while [ "${*}" != "" ] ; do
    INPUT="${1}"
    TAPECHECKSUMFILE="${INPUT}/tapechecksum.md5"
    if [ -f "${TAPECHECKSUMFILE}" ] ; then
        _report -wt "A collection checksum already exists at ${TAPECHECKSUMFILE}"
        exit 1
    fi
    TEMPCHECKSUMFILE=$(_maketemp)
    cd "${INPUT}"

    #loop through the directories, find the checksum files, cat them together, and also sed to add the media ids
    while read CHECKSUMFILES ; do
        PACKAGE="$(basename "$(dirname "$(dirname "${CHECKSUMFILES}")")")"
        _report -d "Concatenating ${CHECKSUMFILES}."
        cat "${CHECKSUMFILES}" | sed "s|  ./|  ./${PACKAGE}/objects/|g" >> "${TEMPCHECKSUMFILE}"
    done < <(find "${INPUT}" -maxdepth 3 -mindepth 3 -type f -iname "checksum.md5")

    #create md5 checksums for all of the files in the metadata directory
    _report -d "Creating checksums for all metadata directories."
    md5deep -rel ./*/metadata >> "${TEMPCHECKSUMFILE}"

    _report -d "Sorting and saving ${TAPECHECKSUMFILE}."
    sort -k2 "${TEMPCHECKSUMFILE}" | grep -v .DS_Store >> "${TAPECHECKSUMFILE}"

    shift
done
